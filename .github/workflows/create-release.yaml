name: Create Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  M10_PROTOBUFS: "${{ github.workspace }}/protobuf"

jobs:

  # NOTE: Currently artifact compilation split into multiple jobs because GH Actions don't support matrix outputs

  artifact-windows:

    name: Compile x86_64-pc-windows-gnu
    runs-on: ubuntu-latest

    outputs:
      archive: ${{ steps.compile.outputs.BUILT_ARCHIVE }}
      checksum: ${{ steps.compile.outputs.BUILT_CHECKSUM }}

    steps:
      - uses: actions/checkout@v3
      - name: Compile
        id: compile
        uses: rust-build/rust-build.action@v1.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          SRC_DIR: examples/m10_cli
          PRE_BUILD: .github/utils/setup-rust-builder.sh
          RUSTTARGET: x86_64-pc-windows-gnu
          ARCHIVE_TYPES: zip
          UPLOAD_MODE: none
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Binary
          path: |
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}

  artifact-linux:

    name: Compile x86_64-unknown-linux-musl
    runs-on: ubuntu-latest

    outputs:
      archive: ${{ steps.compile.outputs.BUILT_ARCHIVE }}
      checksum: ${{ steps.compile.outputs.BUILT_CHECKSUM }}

    steps:
      - uses: actions/checkout@v3
      - name: Compile
        id: compile
        uses: rust-build/rust-build.action@v1.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          SRC_DIR: examples/m10_cli
          PRE_BUILD: .github/utils/setup-rust-builder.sh
          RUSTTARGET: x86_64-unknown-linux-musl
          ARCHIVE_TYPES: tar.gz tar.xz tar.zst
          UPLOAD_MODE: none
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Binary
          path: |
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}

  artifact-mac:

    name: Compile x86_64-apple-darwin
    runs-on: ubuntu-latest

    outputs:
      archive: ${{ steps.compile.outputs.BUILT_ARCHIVE }}
      checksum: ${{ steps.compile.outputs.BUILT_CHECKSUM }}

    steps:
      - uses: actions/checkout@v3
      - name: Compile
        id: compile
        uses: rust-build/rust-build.action@v1.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          SRC_DIR: examples/m10_cli
          PRE_BUILD: .github/utils/setup-rust-builder.sh
          RUSTTARGET: x86_64-apple-darwin
          ARCHIVE_TYPES: zip
          UPLOAD_MODE: none
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: Binary
          path: |
            ${{ steps.compile.outputs.BUILT_ARCHIVE }}
            ${{ steps.compile.outputs.BUILT_CHECKSUM }}

  release:

    name: Create Release
    runs-on: ubuntu-latest

    needs:
      - artifact-linux
      - artifact-mac
      - artifact-windows

    steps:
      - uses: actions/checkout@v3
      - uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          files: |
            ${{needs.artifact-linux.outputs.archive}}
            ${{needs.artifact-linux.outputs.checksum}}
            ${{needs.artifact-mac.outputs.archive}}
            ${{needs.artifact-mac.outputs.checksum}}
            ${{needs.artifact-windows.outputs.archive}}
            ${{needs.artifact-windows.outputs.checksum}}


  # publish-rust:
  
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true
  #     - uses: katyo/publish-crates@v2
  #       with:
  #         path: "./rust"
  #         registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
  #         ignore-unpublished-changes: true

  # publish-node:

  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "16.x"
  #         registry-url: "https://registry.npmjs.org"
  #     - run: npm install
  #     - run: npm publish
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # publish-dart:

  #   uses: dart-lang/setup-dart/.github/workflows/publish.yml@main
  #   with:
  #     working-directory: flutter/m10_sdk
